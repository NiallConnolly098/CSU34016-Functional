THEORY Ex5Q4
IMPORT-THEORY Equality
IMPORT-THEORY Boolean
IMPORT-THEORY Arithmetic
IMPORT-THEORY List
IMPORT-HASKELL List
IMPORT-HASKELL Ex5

THEOREM ex5q4

   casef (x+1) > casef x

STRATEGY CaseSplit Plus1Order

  CASE 1 (x < 6)
    SHOW
      casef (x+1) > casef x

    STRATEGY ReduceAll

      casef (x+1) > casef x
      = DEF casef.1 @ casef 1
        (case "guarded-if" of
        _ | (x + 1 < 7) -> 2*(x+1)
          | (x + 1 >= 7) -> 2*(x+1)-1) > casef x
      = LAW lt_p1_to_m1 l2r @ < 1
        (case "guarded-if" of
        _ | (x < 7 - 1) -> 2*(x+1)
          | (x + 1 >= 7) -> 2*(x+1)-1) > casef x
      = SIMP
        (case "guarded-if" of
        _ | (x < 6) -> 2*(x+1)
          | (x + 1 >= 7) -> 2*(x+1)-1) > casef x
      = CASEP Plus1Order 1 @ < 1
        (case "guarded-if" of
        _ | True -> 2*(x+1)
          | (x + 1 >= 7) -> 2*(x+1)-1) > casef x
      = GRDIF 1
        2*(x+1) > casef x
      = DEF casef.1 @ casef 1
        2*(x+1) > (case "guarded-if" of
        _ | (x < 7) -> 2*x
          | (x >= 7) -> 2*x-1)
      = LAW lt_widen l2r @ < 1
        2*(x+1) > (case "guarded-if" of
        _ | ((x < 7) || (x < (7-1))) -> 2*x
          | (x >= 7) -> 2*x-1)
      = SIMP
        2*(x+1) > (case "guarded-if" of
        _ | ((x < 7) || (x < 6)) -> 2*x
          | (x >= 7) -> 2*x-1)
      = CASEP Plus1Order 1 @ < 2
        2*(x+1) > (case "guarded-if" of
        _ | ((x < 7) || True) -> 2*x
          | (x >= 7) -> 2*x-1)
      = LAW or_right_zero l2r @ || 1
        2*(x+1) > (case "guarded-if" of
        _ | True -> 2*x
          | (x >= 7) -> 2*x-1)
      = GRDIF 1
        2*(x+1) > 2*x
      = LAW mul_add_left_distr l2r @ * 1
        2*x + 2*1 > 2*x
      = SIMP @ * 2
        2*x + 2 > 2*x
      = LAW nat_add_order_2 
        True
    END ReduceAll
  END CASE 1

  CASE 2 (x == 6)
    SHOW
      casef (x+1) > casef x

    STRATEGY ReduceAll

      casef (x+1) > casef x
      = DEF casef.1 @ casef 1
        (case "guarded-if" of
        _ | (x + 1 < 7) -> (2*(x+1))
          | (x + 1 >= 7) -> 2*(x+1)-1) > casef x
      = LAW ge_p1_to_m1 l2r @ >= 1
        (case "guarded-if" of
        _ | (x + 1 < 7) -> (2*(x+1))
          | (x >= 7-1) -> 2*(x+1)-1) > casef x
      = LAW gt_def l2r @ >= 1
        (case "guarded-if" of
        _ | (x + 1 < 7) -> (2*(x+1))
          | ((x > 7-1) || (x == 7-1)) -> 2*(x+1)-1) > casef x
      = SIMP
        (case "guarded-if" of
        _ | (x + 1 < 7) -> (2*(x+1))
          | ((x > 6) || (x == 6)) -> 2*(x+1)-1) > casef x
      = CASEP Plus1Order
        (case "guarded-if" of
        _ | (x + 1 < 7) -> (2*(x+1))
          | ((x > 6) || True) -> 2*(x+1)-1) > casef x
      = LAW or_right_zero l2r @ || 1
        (case "guarded-if" of
        _ | (x + 1 < 7) -> (2*(x+1))
          | True -> 2*(x+1)-1) > casef x
      = GRDIF 2
        2*(x+1)-1 > casef x
      = DEF casef.1 @ casef 1
        2*(x+1)-1 > (case "guarded-if" of 
        _ | (x < 7) -> 2*x
          | (x >= 7) -> 2*x-1)
      = LAW lt_eq_widen l2r @ < 1
        2*(x+1)-1 > (case "guarded-if" of 
        _ | (x == 7-1 || x < 7-1) -> 2*x
          | (x >= 7) -> 2*x-1)
      = SIMP
        2*(x+1)-1 > (case "guarded-if" of 
        _ | (x == 6 || x < 6) -> 2*x
          | (x >= 7) -> 2*x-1)
      =CASEP Plus1Order 2 @ == 1
        2*(x+1)-1 > (case "guarded-if" of 
        _ | (True || x < 6) -> 2*x
          | (x >= 7) -> 2*x-1)
      = LAW or_left_zero l2r @ || 1`
        2*(x+1)-1 > (case "guarded-if" of 
        _ | True -> 2*x
          | (x >= 7) -> 2*x-1)
      = GRDIF 1
        2*(x+1)-1 > 2*x
      = LAW mul_add_left_distr l2r @ * 1
        2*x + 2*1 - 1 > 2*x
      = LAW gt_minus_1 r2l @ > 1
        2*x + 2*1 - 1 - 1 > 2*x - 1
      = LAW gt_minus_1 r2l @ > 1
        2 * x + 2 * 1 - 1 - 1 - 1 > 2 * x - 1 - 1
      = LAW sub_add_assoc l2r @ - 3
        2 * x + 2 * 1 - 1 -(1 + 1) > 2 * x - 1 - 1
      = LAW sub_add_assoc l2r @ - 2
        (2 * x + 2 * 1) - (1 + (1 + 1)) > 2 * x - 1 - 1
      = LAW add_sub_assoc r2l @ - 1
        (2 * x) - (1 + (1 + 1) - 2 * 1) > 2 * x - 1 - 1
      = SIMP
        (2 * x) - 1 > (2 * x) - 1 - 1
      = LAW gt_minus_1 l2r @ > 1
        (2 * x) > (2 * x) - 1 
      = LAW gt_p1_to_m1 r2l @ > 1
        (2 * x) + 1 > (2 * x)
      = LAW nat_add_order_1
        True
    END ReduceAll
  END CASE 2

  CASE 3 (x == 7)
    SHOW
      casef (x+1) > casef x

    STRATEGY ReduceAll

      casef (x+1) > casef x
      = DEF casef.1 @ casef 1
        (case "guarded-if" of
        _ | (x + 1 < 7) -> 2*(x+1)
          | (x + 1 >= 7) -> 2*(x+1)-1) > casef x
      = LAW ge_widen l2r @ >= 1
        (case "guarded-if" of
        _ | (x + 1 < 7) -> 2*(x+1)
          | (x + 1 >= 7 || x + 1 >= 7+1) -> 2*(x+1)-1) > casef x
      = LAW gt_def l2r @ >= 2
        (case "guarded-if" of
        _ | (x + 1 < 7) -> 2*(x+1)
          | (x + 1 >= 7 || (x + 1 > 7+1 || x+1 == 7+1)) -> 2*(x+1)-1) > casef x
      = LAW eq_plus_1 @ == 1
        (case "guarded-if" of
        _ | (x + 1 < 7) -> 2*(x+1)
          | (x + 1 >= 7 || (x + 1 > 7+1 || x == 7)) -> 2*(x+1)-1) > casef x
      = CASEP Plus1Order 3 @ == 1
        (case "guarded-if" of
        _ | (x + 1 < 7) -> 2*(x+1)
          | (x + 1 >= 7 || (x + 1 > 7+1 || True)) -> 2*(x+1)-1) > casef x
      = LAW or_right_zero l2r @ || 2
        (case "guarded-if" of
        _ | (x + 1 < 7) -> 2*(x+1)
          | (x + 1 >= 7 || True) -> 2*(x+1)-1) > casef x
      = LAW or_right_zero l2r @ || 1
        (case "guarded-if" of
        _ | (x + 1 < 7) -> 2*(x+1)
          | True -> 2*(x+1)-1) > casef x
      = GRDIF 2
        2*(x+1)-1 > casef x
      = DEF casef.1 @ casef 1
        2*(x+1)-1 > (case "guarded-if" of
        _ | x<7 -> 2*x
          | x>=7 -> 2*x-1)
      = LAW gt_def l2r @ >= 1
        2*(x+1)-1 > (case "guarded-if" of
        _ | x<7 -> 2*x
          | (x>7 || x==7) -> 2*x-1)
      = CASEP Plus1Order 3 @ == 1
        2*(x+1)-1 > (case "guarded-if" of
        _ | x<7 -> 2*x
          | (x>7 || True) -> 2*x-1)
      = LAW or_right_zero l2r @ || 1
        2*(x+1)-1 > (case "guarded-if" of
        _ | x<7 -> 2*x
          | True -> 2*x-1)
      = GRDIF 2
        2*(x+1)-1 > 2*x-1
      = LAW mul_add_left_distr l2r @ * 1
        2*x + 2*1 - 1 > 2*x - 1 
      = LAW gt_minus_1 r2l @ > 1
        2*x + 2*1 - 1 - 1 > 2*x - 1 - 1
      = LAW gt_minus_1 r2l @ > 1
        2*x + 2*1 - 1 - 1 - 1 > 2*x - 1 - 1 - 1
      = LAW sub_add_assoc l2r @ - 3
        2*x + 2*1 - 1 - (1 + 1) > 2*x - 1 - 1 - 1
      = LAW sub_add_assoc l2r @ - 2
        (2*x + 2*1) - (1 + (1 + 1)) > 2*x - 1 - 1 - 1
      = LAW add_sub_assoc r2l @ - 1
        (2*x) - (1 + (1 + 1) - 2*1) > 2*x - 1 - 1 - 1
      = SIMP
        (2*x) - 1 > 2*x - 1 - 1 - 1
      = LAW gt_minus_1 l2r @ > 1
        2*x > 2*x - 1 - 1
      = LAW gt_p1_to_m1 r2l @ > 1
        2*x + 1 > 2*x - 1
      = LAW gt_p1_to_m1 r2l @ > 1
        2*x + 1 + 1> 2*x
      = NORM +
        1 + 1 + 2*x > 2*x
      = SIMP
        2 + 2*x > 2*x
      = LAW add_symm l2r @ + 1
        2*x + 2 > 2*x
      = LAW nat_add_order_2 @ > 1
        True 
    END ReduceAll
  END CASE 3

  CASE 4 (x > 7)
    SHOW
      casef (x+1) > casef x
    
    STRATEGY ReduceAll

      casef (x+1) > casef x
      = DEF casef.1 @ casef 1
        (case "guarded-if" of
        _ | (x + 1 < 7) -> 2*(x+1)
          | (x + 1 >= 7) -> 2*(x+1)-1) > casef x
      = LAW ge_widen l2r @ >= 1
        (case "guarded-if" of 
        _ | (x + 1 < 7) -> 2 *(x+1) 
          | (x + 1 >= 7 || x + 1 >= 7+1) -> 2*(x+1)-1) > casef x
      = LAW gt_def l2r @ >= 2
        (case "guarded-if" of 
        _ | (x + 1 < 7) -> 2 *(x+1) 
          | (x + 1 >= 7 || (x+1 > 7+1 || x+1 == 7+1)) -> 2*(x+1)-1) > casef x
      = LAW gt_plus_1 l2r @ > 1
        (case "guarded-if" of 
        _ | (x + 1 < 7) -> 2 *(x+1) 
          | (x + 1 >= 7 || (x > 7 || x+1 == 7+1)) -> 2*(x+1)-1) > casef x
      = CASEP Plus1Order 4 @ > 1
        (case "guarded-if" of 
        _ | (x + 1 < 7) -> 2 *(x+1) 
          | (x + 1 >= 7 || (True || x+1 == 7+1)) -> 2*(x+1)-1) > casef x
      = LAW or_left_zero l2r @ || 2
        (case "guarded-if" of 
        _ | (x + 1 < 7) -> 2 *(x+1) 
          | (x + 1 >= 7 || True) -> 2*(x+1)-1) > casef x
      = LAW or_right_zero l2r @ || 1
        (case "guarded-if" of 
        _ | (x + 1 < 7) -> 2 *(x+1) 
          | True -> 2*(x+1)-1) > casef x
      = GRDIF 2
        2*(x+1)-1 > casef x
      = DEF casef.1 @ casef 1
        2*(x+1)-1 > (case "guarded-if" of
        _ | x < 7 -> 2*x
          | x >= 7 -> 2*x-1)
      = LAW gt_def l2r @ >= 1
        2*(x+1)-1 > (case "guarded-if" of
        _ | x < 7 -> 2*x
          | (x > 7 || x == 7) -> 2*x-1)
      = CASEP Plus1Order 4 @ > 2
        2*(x+1)-1 > (case "guarded-if" of
        _ | x < 7 -> 2*x
          | (True || x == 7) -> 2*x-1)
      = LAW or_left_zero l2r @ || 1
        2*(x+1)-1 > (case "guarded-if" of
        _ | x < 7 -> 2*x
          | True -> 2*x-1)
      = GRDIF 2
        2*(x+1)-1 > 2*x-1
      = LAW mul_add_left_distr l2r @ * 1
        2*x + 2*1 - 1 > 2*x-1
      = SIMP
        ((2*x) + 2) - 1 > (2*x) - 1
      = LAW gt_minus_1 l2r @ > 1
        (2*x) + 2 > 2*x
      = LAW nat_add_order_2 @ >
        True
    END ReduceAll
  END CASE 4

END ReduceAll

QED ex5q4

CASE-SCHEME Plus1Order
CASE 1  (x <  6)
CASE 2  (x == 6)
CASE 3  (x == 7)
CASE 4  (x >  7)
EXHAUSTIVE (x <  6) || (x == 6) || (x == 7) || (x >  7)
EXCLUSIVE 1 2  not((x <  6) && (x == 6))
EXCLUSIVE 1 3  not((x <  6) && (x == 7))
EXCLUSIVE 1 4  not((x <  6) && (x >  7))
EXCLUSIVE 2 3  not((x == 6) && (x == 7))
EXCLUSIVE 2 4  not((x == 6) && (x >  7))
EXCLUSIVE 3 4  not((x == 7) && (x >  7))
